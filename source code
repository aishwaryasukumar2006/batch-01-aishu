# 1. Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report

# 2. Load the dataset
data = pd.read_csv('customer_churn.csv')  # Replace with your file name

# 3. Encode categorical variables
for col in data.columns:
    if data[col].dtype == 'object':
        data[col] = data[col].astype('category').cat.codes

# 4. Define features and target
X = data.drop('Churn', axis=1)
y = data['Churn']

# 5. Split data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# 6. Build the model
model = RandomForestClassifier(random_state=0)
model.fit(X_train, y_train)

# 7. Make predictions
y_pred = model.predict(X_test)

# 8. Evaluate the model
print(classification_report(y_test, y_pred))

# 9. Show feature importance (hidden patterns)
importances = pd.Series(model.feature_importances_, index=X.columns)
importances.sort_values(ascending=False).plot(kind='bar', title='Feature Importances')
